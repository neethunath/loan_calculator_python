# Loan repayment calculator

import math
import argparse

# Create parser
parser = argparse.ArgumentParser(description = "This program calculates principal, number of payments and repayment amount")

# Add arguments
parser.add_argument("--types")
parser.add_argument("--payment", type = float)
parser.add_argument("--principal", type = int)
parser.add_argument("--periods", type = int)
parser.add_argument("--interest", type = float)

# Parse arguments
args = parser.parse_args()

# Create a list of inputs
input = [args.types, args.payment, args.principal, args.periods, args.interest]

# Calculate unknown
p = args.principal
n = args.periods
r = args.interest
a = args.payment

if input.count(None) > 2:
    print("Incorrect parameters")
elif args.periods != None and args.periods < 0:
    print("Incorrect parameters")
elif args.types == None or args.interest == None:
    print("Incorrect parameters")
elif args.types == "diff" and args.payment != None:
    print("Incorrect parameters")
    
elif args.types == "diff": 
    m = 1
    sum = 0
    i = r / (12 * 100)
    for m in range(1, n + 1):
        d = math.ceil((p / n) + (i * (p - ((p * (m - 1)) / n))))
        print(f"Month {m} = {d}")
        sum += d
    over_payment = p - sum
    print(f"Overpayment = {over_payment}")
    
elif args.types == "annuity":
    i = r / (12 * 100)
    
    if args.principal == None:
        x = (i * ((i + 1) ** n))/(((1 + i) ** n) - 1)
        p = a / x
        print(f"Your loan principal = {p}!")
        
    elif args.periods == None:
        x = a / (a - (i * p))
        n = math.ceil(math.log(x, (1 + i)))
        years = n // 12
        months = n % 12
        if years != 0 and months != 0:
            print(f"It will take {years} years and {months} months to repay this loan!")
        elif years == 0:
            print(f"It will take {months} months to repay this loan!")
        elif months == 0:
            print(f"It will take {years} years to repay this loan!")
        over_payment = p - (a * n)
        print(f"Overpayment = {over_payment}")
        
    elif args.payment == None:
        a = math.ceil(p * ((i * ((i + 1) ** n))/(((1 + i) ** n) - 1)))
        over_payment = a
        print(f"Overpayment = {over_payment}")
        annuity_payment = p - (a * n)
        print(f"Your annuity payment = {annuity_payment}!")
